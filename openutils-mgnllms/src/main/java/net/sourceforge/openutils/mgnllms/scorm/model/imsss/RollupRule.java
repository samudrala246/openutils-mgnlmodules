/**
 *
 * E-learning Module for Magnolia CMS (http://www.openmindlab.com/lab/products/lms.html)
 * Copyright(C) 2010-2013, Openmind S.r.l. http://www.openmindonline.it
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.08.21 at 12:53:38 PM CEST 
//

package net.sourceforge.openutils.mgnllms.scorm.model.imsss;

import java.math.BigDecimal;
import java.math.BigInteger;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>
 * Java class for rollupRule complex type.
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="rollupRule">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="rollupConditions">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="rollupCondition" maxOccurs="unbounded">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;attribute name="operator" type="{http://www.imsglobal.org/xsd/imsss}conditionOperator" default="noOp" />
 *                           &lt;attribute name="condition" use="required" type="{http://www.imsglobal.org/xsd/imsss}rollupRuleCondition" />
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                 &lt;/sequence>
 *                 &lt;attribute name="conditionCombination" type="{http://www.imsglobal.org/xsd/imsss}conditionCombination" default="any" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="rollupAction">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;attribute name="action" use="required" type="{http://www.imsglobal.org/xsd/imsss}rollupActionEnum" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *       &lt;attribute name="childActivitySet" type="{http://www.imsglobal.org/xsd/imsss}childActivity" default="all" />
 *       &lt;attribute name="minimumCount" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" default="0" />
 *       &lt;attribute name="minimumPercent" type="{http://www.imsglobal.org/xsd/imsss}percent" default="0" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "rollupRule", propOrder = {"rollupConditions", "rollupAction" })
public class RollupRule
{

    @XmlElement(required = true)
    protected RollupConditions rollupConditions;

    @XmlElement(required = true)
    protected RollupAction rollupAction;

    @XmlAttribute
    protected ChildActivity childActivitySet;

    @XmlAttribute
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger minimumCount;

    @XmlAttribute
    protected BigDecimal minimumPercent;

    /**
     * Gets the value of the rollupConditions property.
     * @return possible object is {@link RollupConditions }
     */
    public RollupConditions getRollupConditions()
    {
        return rollupConditions;
    }

    /**
     * Sets the value of the rollupConditions property.
     * @param value allowed object is {@link RollupConditions }
     */
    public void setRollupConditions(RollupConditions value)
    {
        this.rollupConditions = value;
    }

    /**
     * Gets the value of the rollupAction property.
     * @return possible object is {@link RollupAction }
     */
    public RollupAction getRollupAction()
    {
        return rollupAction;
    }

    /**
     * Sets the value of the rollupAction property.
     * @param value allowed object is {@link RollupAction }
     */
    public void setRollupAction(RollupAction value)
    {
        this.rollupAction = value;
    }

    /**
     * Gets the value of the childActivitySet property.
     * @return possible object is {@link ChildActivity }
     */
    public ChildActivity getChildActivitySet()
    {
        if (childActivitySet == null)
        {
            return ChildActivity.ALL;
        }
        else
        {
            return childActivitySet;
        }
    }

    /**
     * Sets the value of the childActivitySet property.
     * @param value allowed object is {@link ChildActivity }
     */
    public void setChildActivitySet(ChildActivity value)
    {
        this.childActivitySet = value;
    }

    /**
     * Gets the value of the minimumCount property.
     * @return possible object is {@link BigInteger }
     */
    public BigInteger getMinimumCount()
    {
        if (minimumCount == null)
        {
            return new BigInteger("0");
        }
        else
        {
            return minimumCount;
        }
    }

    /**
     * Sets the value of the minimumCount property.
     * @param value allowed object is {@link BigInteger }
     */
    public void setMinimumCount(BigInteger value)
    {
        this.minimumCount = value;
    }

    /**
     * Gets the value of the minimumPercent property.
     * @return possible object is {@link BigDecimal }
     */
    public BigDecimal getMinimumPercent()
    {
        if (minimumPercent == null)
        {
            return new BigDecimal("0");
        }
        else
        {
            return minimumPercent;
        }
    }

    /**
     * Sets the value of the minimumPercent property.
     * @param value allowed object is {@link BigDecimal }
     */
    public void setMinimumPercent(BigDecimal value)
    {
        this.minimumPercent = value;
    }

}
